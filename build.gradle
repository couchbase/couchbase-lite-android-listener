
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

repositories {
    mavenLocal()
    maven { url 'http://files.couchbase.com/maven2/' }
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs = [
                'src/main/java',
                'vendor/tjws/src/java'
        ]
    }
}

def buildListenerWithArtifacts = System.getProperty("buildListenerWithArtifacts")

dependencies {

    testCompile group: 'junit', name: 'junit', version: '4.11'

    compile 'com.couchbase.cblite:servlet:2-3'

    compile buildListenerWithArtifacts == null ?
            project(':libraries:couchbase-lite-java-core') :
            'com.couchbase.lite:couchbase-lite-java-core:' + System.getenv("MAVEN_UPLOAD_VERSION")
}

task createMavenDirectory(type: Exec) {

    ext {
        uploadUser = System.getenv("MAVEN_UPLOAD_USERNAME") + ":" + System.getenv("MAVEN_UPLOAD_PASSWORD")
        mkcolPath  = System.getenv("MAVEN_UPLOAD_REPO_URL") + "com/couchbase/lite/couchbase-lite-java-listener/" + System.getenv("MAVEN_UPLOAD_VERSION") + "/"
    }
    commandLine "curl", "--user", uploadUser, "-X", "MKCOL", mkcolPath
}

// this hack is only needed for apache mod_dav based Maven repo's like file.couchbase.com.  otherwise, skip it
createMavenDirectory.onlyIf { System.getenv("MAVEN_UPLOAD_REPO_URL").contains("files") }

task uploadArchivesWrapper(dependsOn: createMavenDirectory) << {
    uploadArchives.execute()
}

def mavenPath() {
    System.getenv("MAVEN_BUILD_LOCAL") == "true" ?
            'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath :
            System.getenv("MAVEN_UPLOAD_REPO_URL")
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenPath()) {
                authentication(userName: System.getenv("MAVEN_UPLOAD_USERNAME"), password: System.getenv("MAVEN_UPLOAD_PASSWORD"))
            }
            pom.version = System.getenv("MAVEN_UPLOAD_VERSION") != null ? System.getenv("MAVEN_UPLOAD_VERSION") : ''
            pom.groupId = 'com.couchbase.lite'
            pom.artifactId = 'couchbase-lite-java-listener'
            pom.project {
                name 'com.couchbase.lite:couchbase-lite-java-listener'
                description 'Embedded web server to expose Couchbase Lite REST API on an http socket'
                url 'http://developer.couchbase.com/mobile/'
                licenses {
                    license {
                        name 'Couchbase, Inc. Community Edition License Agreement'
                        url 'https://www.couchbase.com/binaries/content/assets/website/legal/ce-license-agreement.pdf'
                        distribution 'repo'
                    }
                }
                scm {
                    url 'http://developer.couchbase.com/mobile/'
                    connection 'scm:git@github.com:couchbase/couchbase-lite-java-listener.git'
                    developerConnection 'scm:git@github.com:couchbase/couchbase-lite-java-listener.git'
                }
                developers {
                    developer {
                        name 'Couchbase Mobile'
                        email 'mobile@couchbase.com'
                        organization 'Couchbase'
                        organizationUrl 'http://www.couchbase.com'
                    }
               }
            }
        }
    }
}

task sourcesJar(type: Jar) { 
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

artifacts { 
    archives sourcesJar
}
